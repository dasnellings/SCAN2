# vim: syntax=python

rule scansnv_genotype_scatter:
    input:
        mmq60="{muttype}/mmq60.tab",
        mmq1="{muttype}/mmq1.tab",
        som_ab="{muttype}/{sample}/{vartype}_ab.%s{chr}.rda" % config['chr_prefix'],
    output:
        "{muttype}/{sample}/{vartype}_genotypes.%s{chr}.rda" % config['chr_prefix']
    params:
        sc_sample="{sample}",
        chrom="{chr}"
    resources:
        mem=5000
    benchmark:
        "{muttype}/{sample}/benchmark_{vartype}_genotypes.%s{chr}.tsv" % config['chr_prefix']
    shell:
        "{config[scripts]}/genotype2.R"
        "   {input.mmq60} {input.mmq1}"
        "   {params.sc_sample} {config[bulk_sample]} {input.som_ab}"
        "   {output}"
        "   {config[min_sc_alt]} {config[min_sc_dp]} {config[min_bulk_dp]} {params.chrom}"


# parallelized per chromosome
rule scansnv_cigar_scores_scatter:
    input:
        gtobject="{muttype}/{sample}/{vartype}_genotypes.pre.rda",
        sc_cigars="{muttype}/{sample}/{vartype}_cigars.tab",
        bulk_cigars="{muttype}/%s/{vartype}_cigars.tab" % config['bulk_sample']
    output:
        "{muttype}/{sample}/{vartype}_genotypes.cigars.%s{chr}.rda" % config['chr_prefix']
    resources:
        mem=4000
    script:
        "scripts/scansnv_cigar_scores_scatter_script.R"
    

rule scansnv_cigar_scores_gather:
    input:
        rdas=expand("{{muttype}}/{{sample}}/{{vartype}}_genotypes.cigars.{chr_prefix}{chr}.rda",
            chr_prefix=config['chr_prefix'],
            chr=config['chrs'])
    output:
        "{muttype}/{sample}/{vartype}_genotypes.rda"
    benchmark:
        "{muttype}/{sample}/benchmark_{vartype}_genotypes_cigar_scores_gather.tsv"
    resources:
        mem=24000
    script:
        "scripts/scansnv_cigar_scores_gather_script.R"


rule scansnv_genotype_gather:
    input:
        rdas=lambda wildcards:
            expand("{muttype}/{sample}/{vartype}_genotypes.{chr_prefix}{chr}.rda",
                vartype=wildcards.vartype,
                muttype=wildcards.muttype,
                sample=wildcards.sample,
                chr_prefix=config['chr_prefix'],
                chr=config['chrs']),
        ab_fits="ab_model/{sample}/fits.rda",
        ab_training="ab_model/{sample}/training.rda"
    output:
        "{muttype}/{sample}/{vartype}_genotypes.pre.rda"
    resources:
        mem=8000
    script:
        "scripts/scansnv_genotype_gather_script_object.R"
